apiVersion: monitoring.grafana.com/v1alpha1
kind: GrafanaAgent
metadata:
  name: grafana-agent-test
  labels:
    app: grafana-agent-test
  annotations:
    "helm.sh/hook": test
spec:
  image: "{{ .Values.image.registry }}/grafana/agent:{{ .Values.image.tag }}"
  logLevel: info
  serviceAccountName: grafana-agent-test-sa
  prometheus:
    instanceSelector:
      matchLabels:
        agent: grafana-agent-test

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-agent-test-sa
  annotations:
    "helm.sh/hook": test

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-agent-test-cr
  annotations:
    "helm.sh/hook": test
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-agent-test-crb
  annotations:
    "helm.sh/hook": test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-agent-test-cr
subjects:
- kind: ServiceAccount
  name: grafana-agent-test-sa
  namespace: {{ .Release.Namespace }}

---

apiVersion: v1
kind: Service
metadata:
  name: grafana-agent-test-svc
  annotations:
    "helm.sh/hook": test
spec:
    ports:
    - name: web
      port: 8080
    selector:
        app.kubernetes.io/instance: grafana-agent-test
        app.kubernetes.io/name: grafana-agent

---

apiVersion: v1
kind: Pod
metadata:
  name: grafana-agent-test-probe
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-weight": "1"
spec:
  containers:
  - name: busybox
    image: busybox
    command: ['wget']
    args:  ['grafana-agent-test-svc:8080/-/healthy']
  # Wait for GrafanaAgent CR
  initContainers:
  - name: sleep
    image: busybox
    command: ['sleep', '60']
  restartPolicy: Never 
